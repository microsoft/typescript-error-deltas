parameters:
  - name: POST_RESULT
    displayName: Post GitHub comment with results
    type: boolean
    default: true
  - name: DIAGNOSTIC_OUTPUT
    displayName: Log diagnostic data
    type: boolean
    default: false
  - name: TOP_REPOS
    displayName: Query Github for top TS repos by stars
    type: boolean
    default: false
  - name: OLD_TS_REPO_URL
    displayName: Old Typscript Repo Url
    type: string
    default: https://github.com/microsoft/TypeScript.git
  - name: OLD_HEAD_REF
    displayName: Old head reference
    type: string
    default: main
  - name: REQUESTING_USER
    displayName: User name that requested the run
    type: string
  - name: SOURCE_ISSUE
    displayName: PR ID in github
    type: number
  - name: STATUS_COMMENT
    displayName: Typescript-bot comment ID indicating that the run started
    type: number

pr: none
trigger: none

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: ListRepos
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'
  - script: |
      npm ci
      npm run build
      mkdir artifacts
  - script: node dist/listTopRepos TypeScript 100 0 artifacts/repos.json
    condition: eq('${{ parameters.TOP_REPOS }}', 'true')
    env:
      GITHUB_PAT: $(GITHUB_PAT)
    displayName: 'List top TS repos'
  - script: node dist/listUserTestRepos ./userTests artifacts/repos.json
    condition: ne('${{ parameters.TOP_REPOS }}', 'true')
    displayName: 'List user test repos'
  - publish: artifacts
    artifact: RepoList
- job: UserTestInline
  dependsOn: ListRepos
  timeoutInMinutes: 360
  steps:
  - download: current
    artifact: RepoList
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'
  - script: |
      npm ci
      npm run build
      npm install -g pnpm
      node dist/userErrors ${{ parameters.POST_RESULT }} ${{ parameters.OLD_TS_REPO_URL }} ${{ parameters.OLD_HEAD_REF }} ${{ parameters.REQUESTING_USER }} ${{ parameters.SOURCE_ISSUE }} ${{ parameters.STATUS_COMMENT }} '$(Pipeline.Workspace)/RepoList/repos.json' ${{ parameters.DIAGNOSTIC_OUTPUT }}
    displayName: 'Run user tests'
    env:
      GITHUB_PAT: $(GITHUB_PAT)
